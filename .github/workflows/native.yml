name: Native

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - '.github/workflows/native.yml'
              - 'project/**'
              - '**.scala'
              - '**.sbt'
              - '**.conf'
              - '**.json'
              - '**.wv'
              - SCALA_VERSION
  build_native:
    name: Cross build with Scala Native
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: arm64
            name: mac
            suffix: dylib
            run_on: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          - os: ubuntu-24.04-arm
            arch: arm64
            name: linux
            suffix: so
            run_on: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          - os: ubuntu-latest
            arch: x64
            name: linux
            suffix: so
            run_on: true
# TODO Need some tweaks to run sbt on Windows
#          - os: windows-latest
#            arch: x64
#            name: windows
#            suffix: dll
    runs-on: ${{ matrix.os }}
    if: ${{ matrix.run_on }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: sbt
      - name: Install libgc
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get install libgc-dev
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install bdw-gc
          fi
      - name: Set SCALA_VERSION env
        run: |
          SCALA_VERSION=$(cat SCALA_VERSION)
          echo SCALA_VERSION: $SCALA_VERSION
          echo "SCALA_VERSION=$SCALA_VERSION" >> $GITHUB_ENV
      - name: Build native binary
        run: |
          ./sbt 'wvcLib/nativeLinkReleaseFast'
      - name: Ad-hoc sign macOS library
        if: runner.os == 'macOS'
        run: |
          echo "Signing macOS library with ad-hoc signature..."
          # Sign the library
          codesign --sign - --force wvc-lib/target/scala-${{ env.SCALA_VERSION }}/libwvlet.dylib
          
          # Remove quarantine attribute if present
          xattr -cr wvc-lib/target/scala-${{ env.SCALA_VERSION }}/libwvlet.dylib || true
          
          # Verify signature
          codesign --verify --verbose wvc-lib/target/scala-${{ env.SCALA_VERSION }}/libwvlet.dylib
          
          # Display signature info
          codesign --display --verbose=2 wvc-lib/target/scala-${{ env.SCALA_VERSION }}/libwvlet.dylib
      - name: Install Rust for native tests
        if: runner.os == 'Linux'
        run: rustup update
      - name: Test native library
        run: |
          echo "Testing native library..."
          make test
        working-directory: wvc-lib
      - name: Upload native binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-${{ matrix.arch }}
          path: wvc-lib/target/scala-${{ env.SCALA_VERSION }}/libwvlet.${{ matrix.suffix }}
  collect_artifact:
    name: Collect wvc dll
    runs-on: ubuntu-latest
    needs: build_native
    steps:
      - name: Merge artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: wvc-lib
          delete-merged: true
          separate-directories: true
