name: NPM Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish'
        required: true
        type: choice
        options:
          - typescript-sdk
          - highlightjs-wvlet
          - prismjs-wvlet
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  publish-typescript-sdk:
    name: Publish TypeScript SDK to NPM
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'workflow_dispatch' && inputs.package == 'typescript-sdk')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdks/typescript
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: sbt
      
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Build Scala.js SDK
        working-directory: .
        run: ./sbt "sdkJs/fullLinkJS"
      
      - name: Install dependencies
        run: npm install
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Run tests
        run: npm run test:ci
      
      - name: Set version from tag
        if: github.event_name == 'push'
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//')
          npm version $VERSION --no-git-tag-version
      
      - name: Set version from input
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
      
      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-prismjs:
    name: Publish Prism.js Wvlet extension to NPM
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'workflow_dispatch' && inputs.package == 'prismjs-wvlet')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: prismjs-wvlet
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm test
      
      - name: Set version from tag
        if: github.event_name == 'push'
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//')
          npm version $VERSION --no-git-tag-version
      
      - name: Set version from input
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
      
      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-highlightjs:
    name: Publish highlight.js extension to NPM
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'workflow_dispatch' && inputs.package == 'highlightjs-wvlet')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: highlightjs-wvlet
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm test
      
      - name: Run markup tests
        run: npm run mocha
      
      - name: Set version from tag
        if: github.event_name == 'push'
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//')
          npm version $VERSION --no-git-tag-version
      
      - name: Set version from input
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
      
      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}