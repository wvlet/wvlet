name: Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  release:
    name: Create a new release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.TD_ACTIONS_REPO_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        # We need to fetch all tags to get the latest tag
        with:
         fetch-depth: 0
      - if: startsWith(github.ref, 'refs/tags/v')
        name: Create a release note
        run: |
          gh release view "$GITHUB_REF_NAME" --repo="$GITHUB_REPOSITORY" | \
          # Create a new release note only when the release note is not created yet
          gh release create "$GITHUB_REF_NAME" --repo="$GITHUB_REPOSITORY" --generate-notes
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'
          cache: sbt
      - name: Build wvlet-cli
        run: ./sbt cli/packArchiveTgz
      - name: Get the release version name
        run: |
          # Strip v from tag name
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Upload wvlet-cli-(version).tgz to GitHub release
        run: |
          gh release upload "$GITHUB_REF_NAME" \
          "wvlet-cli/target/wvlet-cli-${VERSION}.tar.gz" \
          # Overwrite the existing file
          --clobber \
          --repo="$GITHUB_REPOSITORY" 
