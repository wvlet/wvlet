name: CI

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      src: ${{ steps.filter.outputs.src }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - '.github/workflows/test.yml'
              - 'project/**'
              - '**.scala'
              - '**.sbt'
              - '**.conf'
              - 'wvlet-*/**.json'
              - '**.wv'
              - 'wvlet-*/**.js'
              - 'wvlet-*/**.html'
              - 'wvlet-*/**.css'
              - 'wvlet-*/**.ts'
              - 'package.json'
              - 'package-lock.json'
              - SCALA_VERSION
  code_format:
    name: Code format
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: scalafmt
        run: ./sbt scalafmtCheckAll
  test_scala_3:
    name: Scala 3
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: sbt
      - name: Scala 3.x test
        run: ./sbt projectJVM/test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/target/test-reports/TEST-*.xml'
          check_name: Test Report Scala 3.x
          annotate_only: true
          detailed_summary: true
  test_js:
    name: Scala.js
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: sbt
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: ./package-lock.json
      - name: Install npm dependencies
        run: npm ci
      - name: Scala.js test
        run: JVM_OPTS=-Xmx4g ./sbt "projectJS/test"
      - name: Packaging wvlet-cli
        run: JVM_OPTS=-Xmx4g ./sbt "cli/packArchiveTgz"
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/target/test-reports/TEST-*.xml'
          check_name: Test Report Scala.js
          annotate_only: true
          detailed_summary: true
  test_playground:
    name: Playground
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: sbt
      - uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: 'package-lock.json'
      - name: Install npm dependencies
        run: npm ci
      - name: Build Scala.js
        run: JVM_OPTS=-Xmx4g ./sbt "playground/fullLinkJS"
      - name: Build playground web site
        run: npm run build-playground
  test_native:
    name: Scala Native
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' && (github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: sbt
      - name: Install native dependencies
        run: sudo apt-get update && sudo apt-get install -y libgc-dev
      - name: Scala Native test
        run: ./sbt projectNative/test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/target/test-reports/TEST-*.xml'
          check_name: Test Report Scala Native
          annotate_only: true
          detailed_summary: true
