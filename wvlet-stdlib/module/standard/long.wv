package wvlet.standard

type long:
  def to_int: int = sql"cast(${this} as bigint)"
  def to_long: long = sql"cast(${this} as bigint)"
  def to_float: float = sql"cast(${this} as double)"
  def to_double: double = sql"cast(${this} as double)"
  def to_boolean: boolean = sql"cast(${this} as boolean)"
  def to_string: string = sql"cast(${this} as varchar)"

  def or_else(other:long): long = sql"coalesce(${this},${other})"
  def round(decimal:int=0): double = sql"round(${this},${decimal})"

  def in(v:any*): boolean = sql"${this} in (${v})"
  def not_in(v:any*): boolean = sql"${this} not in (${v})"

  def between(l:long, r:long): boolean = sql"${this} between ${l} and ${r}"
end

type long in td_trino:
  def within(duration:string): boolean = sql"td_interval(${this}, ${duration})"
  def td_time_string(format:string): string = sql"td_time_string(${this}, ${format})"
end

type long in td_hive:
  def td_interval(duration:string): boolean = sql"td_interval(${this}, ${duration})"
  def td_time_string(format:string): string = sql"td_time_string(${this}, ${format})"
end
