package cdp

type td_sdk_log:
  td_client_id: string
  td_host: string
  td_path: string
  td_title: string
  td_description: string
  td_ip: ip_address
  td_url: url
  td_charset: string
  td_browser_version: string
  td_os: string
  td_browser: string
  td_referrer: string
  td_version: string
  td_language: string
  td_color: string
  td_os_version: string
  td_user_agent: user_agent
  td_platform: string
  td_screen: string
  td_global_id: string
  td_viewport: string
  _col0: int
  time: int

  -- Reuse a common filtering pattern for the same type table
  def is_valid_behavior: boolean =
    time is not null
    and td_client_id is not null
    and td_user_agent.category is not 'crawler'
    and td_client_id is not '00000000-0000-4000-8000-000000000000'
    and (
      td_browser is not null
      or not td_browser.regexp_like('^(?:Googlebot(?:-.*)?|BingPreview|bingbot|YandexBot|PingdomBot)$')
    )
    and td_host is not 'gtm-msr.appspot.com'
end

type ip_address in trino extends string:
  def country_name: string = sql"td_ip_to_country_name(${this})"
  def city_name: string = sql"td_ip_to_city_name(${this})"
  def city_latitude: string = sql"td_ip_to_latitude(${this})"
  def city_longitude: string = sql"td_ip_to_longitude(${this})"
  def city_metro_code: string = sql"td_ip_to_metro_code(${this})"
  def city_time_zone: string = sql"td_ip_to_time_zone(${this})"
  def city_postal_code =  sql"td_ip_to_postal_code(${this})"
  def least_specific_subdivision_name: string = sql"td_ip_to_least_specific_subdivision_name(${this})"
  def most_specific_subdivision_name: string = sql"td_ip_to_most_specific_subdivision_name(${this})"
  def subdivision_names: string = sql"td_ip_to_subdivision_names(${this})"
  def connection_type: string = sql"td_ip_to_connection_type(${this})"
  def domain: string = sql"td_ip_to_domain(${this})"
end

type ip_address in duckdb extends string:
  def country_name: string = sql"'N/A'"
  def city_name: string = sql"'N/A'"
  def city_latitude: string = sql"'N/A'"
  def city_longitude: string = sql"'N/A'"
  def city_metro_code: string = sql"'N/A'"
  def city_time_zone: string = sql"'N/A'"
  def city_postal_code =  sql"'N/A'"
  def least_specific_subdivision_name: string = sql"'N/A'"
  def most_specific_subdivision_name: string = sql"'N/A'"
  def subdivision_names: string = sql"'N/A'"
  def connection_type: string = sql"'N/A'"
  def domain: string = sql"'N/A'"
end

type user_agent in trino extends string:
  def category: string = sql"td_parse_agent(${this})('category')"
  def name: string = sql"td_parse_agent(${this})('name')"
  def os: string = sql"td_parse_agent(${this})('os')"
  def os_version =  sql"td_parse_agent(${this})('os_version')"
  def vendor: string = sql"td_parse_agent(${this})('vendor')"
  def version: string = sql"td_parse_agent(${this})('version')"
end

type user_agent in duckdb extends string:
  def category: string = sql"'N/A'"
  def name: string = sql"'N/A'"
  def os: string = sql"'N/A'"
  def os_version =  sql"'N/A'"
  def vendor: string = sql"'N/A'"
  def version: string = sql"'N/A'"
end

type url in trino extends string:
  def utm_campaign: string = sql"parse_url(${this}, 'QUERY', 'utm_campaign')"
  def utm_medium: string = sql"parse_url(${this}, 'QUERY', 'utm_medium')"
  def utm_source: string = sql"parse_url(${this}, 'QUERY', 'utm_source')"
end


type url in duckdb extends string:
  def utm_campaign: string = sql"'N/A'"
  def utm_medium: string = sql"'N/A'"
  def utm_source: string = sql"'N/A'"
end


type weblog_users:
  td_client_id: string
  name: string
  age: int
  gender: string
  email: string
  phone: string
  address: string
  naid: string
  time: int
end

type weblog_user_attr3:
  td_client_id: string
  age: int
  very_long_attr_for_test_cdp_465: string
  time: int
end

type weblog_user_attr2:
  td_client_id: string
  td_language: string
  td_os: string
  time: int
end

type weblog_users_first_purchased_at:
  naid: string
  first_purchased_at: int
  time: int
end

